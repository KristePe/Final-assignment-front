import React, {useContext, useRef, useState, useEffect} from 'react';import './toolbar.css'import {Link, useNavigate} from "react-router-dom";import http from "../../plugins/http";import mainContext from "../../context/mainContext";import {InputGroup} from "react-bootstrap";import {Badge} from '@mui/material'import {    IoCreateOutline,    IoEnterOutline, IoHeartOutline,    IoNotificationsOutline,    IoPersonOutline,    IoReorderFourOutline,    IoSearchOutline} from "react-icons/io5";import UserModal from "../userModal/UserModal";const Toolbar = () => {    const nav = useNavigate()    const searchRef = useRef()    const [search, setSearch] = useState('')    const [error, setError] = useState(false)    const [favoritesCount, setFavoriteCount] = useState(0)    const {user, setUser, favoritesIds} = useContext(mainContext)    const notifications = user && user?.notifications.length !== 0    async function validateSearch() {        if (4 > search.length || search.length > 80) {            searchRef.current.value = ''            return setError(true)        }        await titleSearch()    }    async function titleSearch() {        nav('/search/' + search.replaceAll(' ', '-'))        const data = await http.get('/post-search/' + search.toLowerCase())        console.log(data)        if (data.success) {            setError(false)            setSearch('')            searchRef.current.value = ''        }    }    async function logout() {        const res = await http.get("/logout")        if (res.success) {            localStorage.removeItem("stayLoggedIn");            setUser(null);            nav('/')        }    }    useEffect(() => {        const values = JSON.parse(localStorage.getItem("favorites"));        if (values) {            setFavoriteCount(values.length);        }    }, [favoritesIds]);    return (        <div className="toolbar-container is-sticky">            <div className='logo-bar'>                <Link to="/"><h1 style={{margin:0}}>                    #myForum                </h1>                </Link>            </div>            <div className='toolbar-links-container'>                <Link to="/favorites">                    <div className='toolbar-tab '>                        <p className={'responsive-toolbar-text'}>                            Favorites                        </p>                        <Badge badgeContent={favoritesCount} color="warning">                            <IoHeartOutline                                className={'toolbar-tab-icon responsive-toolbar-icon'}                                color="primary"/>                        </Badge>                    </div>                </Link>                <Link to="/profile">                    <div className='toolbar-tab'>                        <p className={'responsive-toolbar-text'}>                            Profile                        </p>                        <IoPersonOutline                            className={'toolbar-tab-icon responsive-toolbar-icon'}                        />                    </div>                </Link>                {!notifications && <Link to="/notifications">                    <div className='toolbar-tab '>                        <p className={'responsive-toolbar-text'}>                            Notifications                        </p>                        <Badge badgeContent={user?.notifications.length} color="warning">                            <IoNotificationsOutline                                className={'toolbar-tab-icon responsive-toolbar-icon'}                                color="primary"/>                        </Badge>                    </div>                </Link>}                {!user && <Link to="/authentic/login">                    <div className={'toolbar-tab'}>                        <p className={'responsive-toolbar-text'}>                            Log in                        </p>                        <IoEnterOutline                            className={                                'toolbar-tab-icon responsive-toolbar-icon'}                            style={{marginBottom: "3px"}}/>                    </div>                </Link>}                {!user ? <div className="toolbar-signup-login-wrap">                        {/*<Link to="/authentic/login">*/}                        {/*    <p className="toolbar-auth-btn">Login</p>*/}                        {/*</Link>*/}                        {/*<Link to="/authentic/login">*/}                        {/*    <div className={'toolbar-tab'}>*/}                        {/*        <p className={'responsive-toolbar-text'}>*/}                        {/*            Log in*/}                        {/*        </p>*/}                        {/*        <IoEnterOutline*/}                        {/*            className={*/}                        {/*                'toolbar-tab-icon responsive-toolbar-icon'}*/}                        {/*            style={{marginBottom: "3px"}}/>*/}                        {/*    </div>*/}                        {/*</Link>*/}                        {/*<Link to="/authentic/register">*/}                        {/*             <p className="toolbar-auth-btn">Register</p>*/}                        {/*         </Link>*/}                    </div> :                    <div className="toolbar-signup-login-wrap">                        <div>                            <Link to="/create-topic">                                <div className='toolbar-tab'>                                    <p className={                                        'responsive-toolbar-text'}>                                        Create                                    </p>                                    <IoCreateOutline                                        className={'toolbar-tab-icon responsive-toolbar-icon'}                                    />                                </div>                            </Link>                        </div>                        <UserModal user={user} setUser={setUser}/>                    </div>}            </div>            <div className={'toolbar-links-container-responsive'}>                {/*<div className={'toolbar-tab responsive-toolbar-search-icon'}>*/}                {/*    <IoSearchOutline*/}                {/*        className={'toolbar-tab-icon responsive-toolbar-menu-icon'}/>*/}                {/*</div>*/}                <div className="searchbar-container">                    <InputGroup className=" input-group-sm searchbar-input">                        <input ref={searchRef} type="text"                               placeholder={!error ? "Search..." : "Enter 4 to 80 symbols"}                               onKeyDown={e => e.key === 'Enter' ? validateSearch() : null}                               onChange={e => setSearch(e.target.value)}/>                        <div className="searchIcon-wrap">                            <div className="search-icon" onClick={validateSearch}>                                <IoSearchOutline/>                            </div>                        </div>                    </InputGroup>                </div>                <div className='toolbar-tab'>                    <IoReorderFourOutline                        className={'toolbar-tab-icon responsive-toolbar-menu-icon'}/>                </div>            </div>        </div>)};export default Toolbar;